* 编成练习


1. 编写程序。\\
   #+begin_src C
     #include <stdio.h>

     double min(double x, double y) {return x > y ? y : x;}

     int main() {
       double x, y;
       scanf("%f %f",&x,&y);

       printf("%f\n",min(x, y));

       return 0;        
     }
   #+end_src

2. 编写程序。\\
   #+begin_src C
     #include <stdio.h>

     void chline(char ch, int j, int i) {
       //说实话，没看懂题目！QAQ
     }

     int main() {
       chline();

       return 0;
     }
   #+end_src

3. 编写程序。\\
   #+begin_src C
     #include <stdio.h>

     void fun(char ch, int i, int j) {
       for(int x=0;x<j;x++)
         for(int y=0;y<i;y++)
           printf("%c",ch);

       printf("\n");
     }

     int main() {
       char ch;
       int i, j;
       scanf("%c %d %d",&ch,&i,&j);

       fun(ch, i, j);

       return 0;        
     }
   #+end_src

4. 编写程序。\\
   #+begin_src C
     #include <stdio.h>

     double avg(double x, double y) {
       x = 1 / x;
       y = 1 / y;

       return 1 / (x + y) / 2;
     }

     int main() {
       double x, y;
       scanf("%f %f",&x,&y);

       avg(x, y);

       return 0;        
     }
   #+end_src

5. 修改程序。\\
   #+begin_src C
     #include <stdio.h>

     void larger_of(double *x, double *y) {
       if(*x>*y)
         *y = *x;
       else
         *x = *y;
     }

     int main() {
       double x, y;
       scanf("%f %f",&x,&y)

       larger_of(&x, &y);

       return 0;
     }

   #+end_src

   #+RESULTS:

6. 修改编程练习5。\\
   #+begin_src C
     #include <stdio.h>

     void fun(double *x, double *y, double *z) {
       double a = *x;
       double b = *y;
       double c = *z;

       if(a>b && a>c) {
         *z = a;
         if(b>c) {
           *y = b;
           *x = c;
         }
         else {
           *y = c;
           *x = b;
         }
       }
       else if(b>a && b>c) {
         *z = b;
         if(a>c) {
           *y = a;
           *x = c;
         }
         else {
           *y = c;
           *x = a;
         }
       }
       else {
         *z = c;
         if(a>b) {
           *y = a;
           *x = b;
         }
         else {
           *y = b;
           *x = a;
         }
       }  
     }

     int main() {
       double x, y, z=0;
       scanf("%lf %lf %lf",&x,&y,&z);

       fun(&x, &y, &z);
       printf("%lf %f %f\n",x,y,z);

       return 0;
     }
   #+end_src

7. 编写程序。\\
   #+begin_src C
     #include <stdio.h>

     int fun(char ch) {
       if(ch>='a' && ch<='z')
         return ch - 'a' + 1;
       if(ch>='A' && ch<='Z')
         return ch - 'A' + 1;
       
       return -1;
     }

     int main() {
       char ch;

       while((ch=getchar())!='\n')
         printf("%d\n",fun(ch));

       return 0;
     }
   #+end_src

8. 编写程序。\\
   #+begin_src C
     #include <stdio.h>

     double power(double n, int p) {
       if(n==0 && p!=0)
         return 0;
       else if(n!=0 && p==0)
         return 1;
       else if(n==0 && p==0) {
         printf("0的0次幂未定义\n");
         return 1;
       }

       double pow = 1;

       if(p<0) {
         p = -p;
         for(int i=0;i<p;i++)
           pow = pow * n;
         return 1 / pow;
       }

       for(int i=0;i<p;i++)
         pow = pow * n;

       return pow;
     }


     int main() {
       double n;
       int p;

       scanf("%lf %d",&n,&p);
       printf("%f\n",power(n, p));

       return 0;        
     }
   #+end_src


9. 使用递归函数重写练习8。\\
   #+begin_src C
     #include <stdio.h>

     double power(double n, int p) {
       if(n==0 && p!=0)
         return 0;
       else if(n!=0 && p==0)
         return 1;
       else if(n==0 && p==0) {
         printf("0的0次幂未定义\n");
         return 1;
       }

       if(p>0)
         return n * power(n, p-1);
       else
         return 1 / n * power(n, p+1);
     }


     int main() {
       double n;
       int p;

       scanf("%lf %d",&n,&p);
       printf("%f\n",power(2, -2));

       return 0;        
     }
   #+end_src

10. 编写程序。\\
    #+begin_src C
      #include <stdio.h>

      void to_base_n(int n, int p) {
        int r = n % p;
        if(n>=2)
          to_base_n(n/p, p);

        printf("%d",r);
      }

      int main() {

        to_base_n(15, 2);
        return 0;
      }
    #+end_src

11. 用循环代替斐波那契数。\\
    #+begin_src C
      #include <stdio.h>

      void Fibonacci(int n) {
        int f1 = 1;
        int f2 = 1;
        int tmp;

        for(int i=0;i<n;i++) {
          printf("%d ",f1);
          tmp = f1 + f2;
          f1 = f2;
          f2 = tmp;
        }

        printf("\n");
      }

      int main() {
        int n;

        while(scanf("%d",&n)==1)
          Fibonacci(n);

        return 0;
      }
    #+end_src
